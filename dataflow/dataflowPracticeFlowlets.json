{
	"name": "dataflowPracticeFlowlets",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmpID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Gender as string,",
				"          Country as string,",
				"          Dept as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'adfdemo',",
				"     folderPath: 'input',",
				"     fileName: 'employee2D.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 aggregate(groupBy(FirstName,",
				"          LastName,",
				"          EmpID,",
				"          Gender,",
				"          Country,",
				"          Dept),",
				"     Count = count(0)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'adfdemo',",
				"     folderPath: 'OUTPUT',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['Output_x.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          FirstName,",
				"          LastName,",
				"          EmpID,",
				"          Gender,",
				"          Country,",
				"          Dept",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}